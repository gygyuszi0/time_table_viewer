# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Main workflow

on:
    push:
        branches:
            - main

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"
                  server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
                  settings-path: ${{ github.workspace }} # location for the settings.xml file
            - name: Build with Maven
              run: |
                chmod +x ./versions/create-semver.sh
                VERSION=$(./versions/create-semver.sh ./pom.xml "${{github.run_number}}")
                mvn -B versions:set -DnewVersion="${VERSION}" --file ./pom.xml
                mvn -B package --file ./pom.xml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"
                  server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
                  settings-path: ${{ github.workspace }} # location for the settings.xml file
            - name: Build with Maven
              run: |
                chmod +x ./versions/create-semver.sh
                VERSION=$(./versions/create-semver.sh ./pom.xml "${{github.run_number}}")
                mvn -B versions:set -DnewVersion="${VERSION}" --file ./pom.xml
                mvn -B deploy --file ./pom.xml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
