# This workflow will build a package using Maven and then publish it to GitHub packages when a release is created
# For more information see: https://github.com/actions/setup-java/blob/main/docs/advanced-usage.md#apache-maven-with-a-settings-path

name: Feature workflow

on:
    push:
        branches:
            - "feature/**"
            - "bugfix/**"

jobs:
    build:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"
                  server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
                  settings-path: ${{ github.workspace }} # location for the settings.xml file
            - name: Build and publish with Maven
              run: |
                chmod +x ./versions/create-semver.sh
                VERSION=$(./versions/create-semver.sh ./pom.xml "${{github.run_number}}-$GITHUB_SHA")
                mvn -B versions:set -DnewVersion="${VERSION}" --file ./pom.xml
                mvn -B package --file ./pom.xml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    publish:
        runs-on: ubuntu-latest
        permissions:
            contents: read
            packages: write
        steps:
            - uses: actions/checkout@v3
            - name: Set up JDK 17
              uses: actions/setup-java@v3
              with:
                  java-version: "17"
                  distribution: "temurin"
                  cache: maven
            - name: Deploy jar with Maven
              run: |
                chmod +x ./versions/create-semver.sh
                VERSION=$(./versions/create-semver.sh ./pom.xml "${{github.run_number}}-$GITHUB_SHA")
                mvn -B versions:set -DnewVersion="${VERSION}" --file ./pom.xml
                mvn -B deploy --file ./pom.xml
              env:
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            # - name: Login DockerHub
            #   uses: docker/login-action@v2
            #   with:
            #     registry: ${{ env.DOCKER_REGISTRY }}
            #     username: ${{ github.actor }}
            #     password: ${{ secrets.GITHUB_TOKEN }}
            # - name: Deploy to DockerHub
            #   run: |
            #     docker build . -t ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/time_table_viewer:${VERSION}
            #     docker push ${{ env.DOCKER_REGISTRY }}/${{ github.repository }}/time_table_viewer:${VERSION}